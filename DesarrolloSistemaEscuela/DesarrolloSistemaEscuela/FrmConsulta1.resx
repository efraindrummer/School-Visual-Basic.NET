<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEhUSEBIWFRUXFxcVFRUVFRUXFxcVFxUWFhUVFxcY
        HSggGBslGxUVITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhUQEBovHx0dKystKy0tLS0tLSst
        LS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0rLS0tKy0tLS0tLS3/wAARCACjATUDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAwQAAgUBBgf/xABHEAACAQIEAggDBAcFBQkAAAABAhEAAwQSITFBUQUT
        ImFxgZGhBjKxQlJywRQjYoKS0fAVM1Oi4QdDY6OyFiREc4OTwtLx/8QAGAEBAQEBAQAAAAAAAAAAAAAA
        AAECAwT/xAAtEQEBAAEDAwIFAwQDAAAAAAAAAQIDERIEIUExoRMUUZHRUuHwYnGBsSNCYf/aAAwDAQAC
        EQMRAD8AYtCnrIpaytO2hWwVRRAtRRRFWgiijKKqq0ZFoIFq6rVlWiqtAFriggMwBOwJAJ9fGjhaT6Tw
        wORypbKSCAM2jCCYg7eFOdHnMin90+KnKT7VBZiFEsQBzJAHqavahhKkEcCCCPUVTGW4ytp2W0BIElhl
        AE6TJA86thFJYsAcpXc6ZjplIHhOveOWgGCVYJVMfiRaQ3CJAiY5ExNK4C915uAl0KsR2WiIMEARBO0k
        z82kUGgLddyVk2uiyrTkJWdVyWCGAgKQWaRIEn8Rpx7LpaVgWFyEEEl1LnKsEExEncEUDWSu5KGuLHFG
        ADZCeyQGkCDlY8SKby0QDJVbhVRLEASBJMCSQAPMkDzpnLSPThiw52jKZzZftr9r7PjRR8lcyV5/otnZ
        5tPnKiSpvu4gyNQSAa9Hhw5UdYAG4hTI309ooBlK5kq924F4Mfwqx+gpe1c60tlYhVOUgCGJ4yGEqOGw
        Jg0FylcyV46z8Y/96t4a1N0OWXOx/Vh2QtbQNEnKcqsRI7Q4ivWvhkC5r0MdyXAIH4QdFHh70FitVK0w
        VqpFAsyUJ0qqYtjddCqhFTNmDEt8zLqIgfI3E7CkejsKvX3rgGoCW2Mky8Z3Ov4lH7tAw60B1p51pe4l
        AlcWlLi0/cFKXVoELgpdxTl1aWcUCrChMKYYUJhUUOKlWipQa1lactLQLQpy0taQRBRVWqotGVaDqrRk
        Woi0dFoOKtFVK6q0ZVqCgt8DS9oFGKxmzdoBSM0DKudsxHOOM5Qd5p9VpfEkh0CDtHQ6wCuuh08T3Qec
        EgeIdmXsI07rmEDMAYnciGjWOGk05h8pUZdhpHKOB5GlkwZEEJqIgdc+WRtIgCPAHwri3SXcFxbeQQdG
        UoojKCYjtMTB18RRT72gwhhI5HuMj3pJbIsl2CzPaU8tBKEgEqsiZ219TXL1xBL5CNADJGpYCWJ2EEnS
        dqasnOgJX5lBKnXcag896BHCY5ngm2VBKgznDAttoyCdYB19aJjsQgORg09kyuUQS3ZILEfaFEu9HpKs
        iqrKZGgAPCGgeh4HXXah4rC9aQChUaBi3VMuUEmIOaTqQNtz4UCqohYQxDM6EiLMuFYmS1sagEMd+Eca
        2MtBwuAt2zKjX8KiN9goAG5qWcQWuOoC5VC9oNLZzOZSsaADLrJ1JHCiDZaDjcOXQqCRMagkHRgdCNjp
        vTNcdgBJIAG5OgFFY/8AZLf4lz/37v5AUSx0c9uWR5YiB1jXXHdu/cKee6VMHtTqgUdrvBG0ftEjeO8h
        VmELDqSWYTkJbUsUUhiAdePAHxAHIrNvYQBszBoBzKyEyAXFxkYDUgsoMgHSRpx1RtqI7jGnpXCKDzuG
        6Etm6r9UFFo/qzkCdnUgAb7lASQP7obzTgtQrGFBLnUIxkNdgjXeVC7aaTtFadxgNSY/ragdfrAR4Max
        AgiZ1M/nQKdKPdC/qR299ULCJ23AB89gaWxOHLX0ui0TkW5lYxIJVVVRJ0nNcnwFaN7ForZTM/zmNNzM
        EaA6xWbjcTdNxVyZROvb1ymCGAG7SCsajXfegmHw7g3CUbtMijVP7tAo+9x7frXejrLqkOpDMzOxlSJZ
        ieB5QPKm1xqZmRiA6xIBzaHYzGg14xHmCTMKBR1oFxaccUvcWgRuLSt1a0Li0rcWis26tJ3FrSvLSdxa
        BNxQWFNOtBYUAKlWNSg2rIp60tK2BT9paqLqtGRa4i0dFoOotGRa4ooqioiyiiKK4ooiig6orG6Tv2lv
        HMLbHIsh3Kxq0EQpmQdfAVuAVYCgyuhceh/VEjNLFQCWXLJIAYgagGNuFOrhWEgFIJJGZCTqZInMOJNd
        bEtmVApBYEyxU6COAbXceEil8ZjntuFAzCRnJEAAzERqTpyNFP2LeRFVjOVQCdgYET3UYVndFYkXVedT
        MMRMZT8oE7QJBHMHnNFXE5hlB1+ViBJVhGYAAHWdNdB37UC4/SELBRm1MFy7E8jOwnkAI9qsbuKn5QB+
        EN9ufvAnsaeOvGA/YtgCQCCQCQzEkdxkmi0Ga+NYKqk9sgB2CmA2nZA1hiSN9BMngCLohu22gErOk8Gy
        TrrrlnXnXccLmfQMVDZwAhgQoiCBrLEk/hqvRVlluCVYDJlkqw1kMeHjQa9cY6bT3CNfWrVVnAIB4mB4
        wT9AaDKxDGH6twhgGVyEhEXtWhIKqwMnUH5vGJhWeBmuNcAOfMyrKrlIUHIoknMGiNBudpZ6ZwBv2Wtg
        hSSpBImIYE+oBHnS+BwrWLK2LbBnWSZOwYsRIZpyzCjuHdQP20yJAVZAPZWFBPdyk0M3ngnqiIEgFlkn
        kApI96HghiZ/XG3lg/KDObNp3Rl96cNBmXrgIJIJfUhczCArd+3yTtTFvrNAyjYSwaeG8ZedXOGGfNpt
        BGUbyTM89aNFBkXbKC+br7oBDZdctzs5Ac20qCdBvvvXUtsFLC+wViSsrmIk7AtJMaxw12NF6RWzcGW4
        TENOmhXVWUmNRxj9meFCv9Fh7fV9axQxA7OgAiEKQQPPu2oA4vCu7WgHnKA2YGM0ETmAEEMcpjbsnxrQ
        au27AWSNzGYniQAs92g2FRqADigsKO9CYUCtwUrcFO3BStwUUlcWlLiU+4pe4tBn3Fpa4KfuLSlwUCpF
        SrkVKDdsCn7QpPDin7QogyCioKqooqiiCKKIoqq0RaCy0RaotEFFWFXFVFXFAvjlOXRA8GYJIPiIBk93
        Gl7eFt3R2kuwBoLkjfkDqCIHKNKL0o91ULWlLFdSixmYDgs6T3VnPjnQuGuqB2VRhLA3DMrHCMpHCZG+
        sBuWbYUAD+jxNca3bGpVRzJA48zSXRmNZ7YEq11QM6yVAPESFMx3DWmWtu6DNCuDPZOk6jQ8JB8p40HS
        g+a2UGhEjLv4wZ8KDPaOUAE6AaTmaSTpuNTx4Vzo2y5WbylWk6Fsx0LANmB2IOnGPQOG0kQQIJk95kQS
        ee1AG2zDgTOgkneSN5YDafA7VmD4jUXGV1AQaZw0wRuSDBInTQcO/TXuqiocw7IljIzRxJjXWs9eg8Oo
        GkDSNEG8AfZ32oNS24YSNu/6+FJdJ3Ar2iQTDMRouWcpAkkSDJ0jvmmMNhBbAALEDYFjAHIDaOXKjnvo
        jJ/S2cZwcjJPYLwrNl1BMdpNoMbyeFG/tCxbBzuMw1cwx1gEwQNR/LupkWrSiAqgHgANeyF/6QB4ACrk
        QIAERHh3AUVV7wgRrMRw0Ox14V1GkA8/6isfE3MQyP1dllcSoL9XLaRnAUwAQSIYjbYaGtHo1WFtc854
        7U/e+0dO+gzL/S1wYgW1RmWYhVBmA2bU7agcfzrYsXMwnKy9zRPsapZwiqxYbmeWkmT/AF3US5aBgmdO
        TMPYHWgyreCviD2PszFxxORcoB7GoMmR4UTDXFtoTcYTMkqxYcgQABl8hEyeNDsYiyhKIzliYzMC0GSP
        SZPnRk6PUb5SD83ZIJ3iDm03oGmoTUU0JqATUN6IaE9AF6WuCmXoDiilWWgXBTbilrgoEropO6Kfuik7
        goFSK7VmFdqDbw4p+3SVinbdVDCUVaEtFWgMtEWhrRFoLiriqCriiLirCqCrA0VekXsYZWIZUzXGVyDq
        C6Fchg6KZCkREkTvToNZ+Jwz589oDWJkjwOhGmw1FBoJbUFiAAWMsQNSQAATzMADyqXQxAymNRJ7p1jQ
        61W6Xy9kAtIkEkCJGbXXhJpd7hORnPVN2oUkEHTWTxFALDdb2kLETqpCiRmkmeZk67d0U5ctxbI3gSPL
        VR5QBz0pcY2XJkBFBDhtO0CNVPERRc90nNbyMhAKyWBHPYGfagxOkOk7xfKtt4VtGyNEqzEERMg9XuZ+
        dYANO9FWD1VsEAlCwKuu6q7hSJ+UmEae4Uxd6QZSBl7jow17tNtD5EGnrVzMAddddRFQAWw0EZyo7UAR
        pJkGddRy2o10jYrPdGlXqUHkB0tjf0lUCBrbB4IA0yrbIUnfVmYQYJC91erU6/a84j2qdWIPfrPH+hp6
        UHD4kOCFmQNCwjmAYHCfyoB4nEsHyJGihmmIglgBvqTB9OE121bJYMSxI5P2BoRqv5a1Wy9zJmLrrBBi
        TvsIG8abHX0omBvO2YOpGWBJIlpE7ACImO+KoapVsWvWZMyxlJOonMGAijXiI1nyJ17oG/hWR0X0hhbz
        O2GQsULqSECBmJUtBaM+qKMwkd9AY9I2shZmT54GoOguZUb6MD3inzQbSbgpAksZIPazSDp4T3aUU0FD
        Q2ojUNqATUFjRWoLUA2oTUVqC5ooL0vco70u9Arcpa4KauUrcoFmrlWauUNm3Yp63SFmnbRohlaKtBQ0
        VTQGWirQFNFU0BRVxQgauDQFFdFUBqwoLCk+kGxAUm1lmfPLBj5tJmKbFVe0CQTuNjO3HwoEej8Xeexn
        YqX7XyFNgDG5ygzHlV+i7l25bU3hbLgsrwQcuu2kgGNxXRhSjHqraQ0EwchzAsQYgjlr391NiwsyQDx2
        G+uvjqaC3U9otOhEFdI0qzMqidAB/XDvq4BoOKwLORqABOh1k8JHH/U86zcpF2pc4pGcApPENB1GUnlr
        x0865hcFaK/q2uBe0IFy4IzHMRE6a+nCmsJgHQAZgRG2UDXuiAB5VW9ge1I0n5h2tdQeBHL+uMmeNONE
        s2QswWMme07N6ZiYHcNKpjbzIhKgFpAAYxOuoBg6xMDnRUUAADYbUO/hkcEOuYGJUyVMbdnbhWkJJjGM
        6MDBIQ5FYRAIOrA6k6jTxouIJZJeEGveYg7HSD3a0zZwCrORQoJkgAAE7cu6i3MIGEMJHLxBB9iR51nn
        j9WuNZ6qUXrJVjoDMDjB7Q468tcoolq0XK3GDIYHZkcDImPE+tGfo0SCIEb6TI5GfHfejm2ac8U40h1L
        sSXhYMpDFhGUqQywBxPrvXLS27bZdAYAGwGs6AeUny7qdKmkmwSEtmUakdxgAQJGu4PrWpZU2ETEKxhT
        mjeIIHiauap1S/dHpXTVFWobVdqE5oKPQWojUNqAT0BzRrhpW4aKoxoDmiMaC7UALlLXKO5pe5QAauVG
        qUArPxPa+6abT4ptfdavFWrAplbScT71z5VvjHs0+K7P3WoqfFdjk1eRTDrw1oq4ZeVOVXhHsk+JrPJq
        MnxJZ5GvKYXoe4/yI58FMeu1aVn4Wfe7cW0OJdxP1j3rN1dvWtTT3bn/AGlsDefSjWPiK03yhj4CaycP
        b6KsGbuLS4w+znD/AORJJ86af44wFsRZS6/4LRQf8zL9K5ZdTs3NDdvpfcwRaf2/nR7Zc/YI8SP514fF
        f7Qr3+6wyIODXXLeqoB9aycV8Y4998StvutW0E90vmI9RXP5yN/K2vqq2mpLGdL4SzpexNpDyNxc38My
        a+QYjFXLn97du3OYuXHI8gxy+lCtOg0RR+6NvICueXW5eI3OknmvpmK+PcAv931t4/sW2A9bmXTwmsfF
        fH+Jaeow1u2ODXWLT5LEGvD3cdl+ZlXxZQfSZ9qCcbIJXMfAED+Nso965Za2rk646Oni9Rd+J+lLh1xQ
        tjlbtL7GKWPSHSDf+Ovk9z5fYGvPtiXMSAAOZJ/kPc1Q9K5eJbwAifH+Zrn/AMl9K3tpzw9NZ+IelrOq
        4lnH3bqhp8yCfMEVv9E/7TyIXH4cp/xLWo8ShOg7wTXicH8Qq4yusd8g+sHWtNbNu4DEEd2o8D31Jram
        F2yW6Onn6PrOG6TsX7RvYe4txQJlTqNJgjcHuNMm4qKXdgqgSWYgADmSdq+I2ej7tlzdwdxrVyCYBOVo
        1IKnTyOnOa5010pjekFs2bilbKoGKaqL1wnRmEyUUaxtPHiPRjr8vPZ570/F7bpn/ahYUlMDbN9hobhl
        bQPju3gNfGvO3Pizpa/qLwtrysogHlcfX3pK1gbVkAMM7R2VAEaclGgA9BypgJcbVzlX7o1PrXHPXvh2
        w0MZ6x39IxZ/vMZfJ777geiR7Va30piU+XF3PPEXD7NIqmZF5eJIGvjXLt9eA8zBA56g/lXLnlXXhj9G
        xhvizHJvd6wftpbI9VymtfCfHR/39lSOLISv+V9/I14w5SPlUnhGh8hoauyjjI9f9YrU1c55ZulhfD6X
        hPiLBXRIfJ3OCPfb3rRQW3Eo4PgQfpXyFeMN7An66Ue1fuLoDHnJ99q6zq9SON6TC+j6w2F76BcwzcNa
        +dWOmcSmzMO4Fj9NK1cL8VYgbtI/aUN9IrrOtvlzvR/R6K7dgwQ0/hb+VIXel7AJBuAEbg6H0oCfGbj5
        7aH95lPpBqX/AIjw13+/wmYcz1T+gJmus66Od6TJV+mMP/iL60u/Stj/ABF9aysfZ6IuGVa9hyedtsk/
        vD2BrFxvR1hf7vF237iCh/Me9dseqxrF6ex6tuk7P+IvrQX6QtffX1rxl7Bld9jsefPagmweBrpNXdi6
        ez2jY6198etBfF2/vCvIi21WCtV5s8HpWxKfeFSvNQe+pV5JxLW27z70dHHOkwD3Unc6VuqcqqCBJ1VG
        1kxGYGNh/KsTu6W7PR4dydjp96eyPOj3L7j5GEczufAcPrXk26YxDau7zGnyny4VQ9K3+E/5R+VefV09
        XLtLJP8AP4ddPUwx73G3+f3elu2mbV7jE97u3szRQxgre5AnnlE+s15w9K4jl7j8hVW6VxHBR/Gw+lcP
        k87/ANp7/h2+ax/Rfb8vWLhxsCT3bflXeqH3WPnH0YV409JYs8F/jb86G+MxXK37H8qfJX9c90+b/ovs
        9k6clQfiYD3INDZjxuWl/eB9lK6V4xr+MPFB4QKqbmN4XAPA/wCk1qdJj5z9v3T5rL9Hv+z2fVpGt8R/
        w7RPuQ1CvNh/tdfc/FnQHyJVT6V4w2cYd7n+b/SqNgcUTBud+rn1FdJ02n5yvtGL1GrfTGe9exTFog/V
        4fKPvZ7K+uVpPpQL3SBH+Es/euEE+BCE15G50ZfJ1cH94muJ0JdOxT+L/StzQ0J3v+2Lra99P9PT3sSB
        DNfsjTjNwjwJZYpG/csfbxbGeFtUHPiCx9zvWOOg73Ap/GKh6FvDWV/jFdMZpT0Yt1b67tqxewCa9fec
        /jubfwLPDSt6z0xhUVMQjXUtZmVhBckiIDgQFkHQ+NeHXoe9r2k0/bprA2MXanJlZD86FkZG4dpSYNZ1
        MNPObUwy1Mb2b/THx3mJXC5rYiOtZFNw8OyM0LtMmTwEDe3wr8bR+oxjsVJhLzHMV/ZuE6le/hxkbYp6
        Ot3D2sO1k6a2riuJJ1JV2PoCKO/wrZMhL9wGdM9gBY7ytwkehrN09HjxamWry5eX0rRRngvInMgLyIJE
        FZnY15npv4mZS1s2ryaaHqwCTpEF9AP3TXmcL0WbEnr73AZbEpI1kEsRyHPemU+IukbcLYUW7Y0UKApy
        jbNlbU1xx6XCX13dr1Odnpt/Zh4vpK4zSyDf7Rdj/EzSD+GKfwXxGRAuKx21DHMPwuCGA/EWp0fE3S51
        zufFpH1rl34l6UO405Mto/UV6bhjZt2eeamUu+1MYfptD8mIUfs4hGX/AJtsCfNa08P0reOotdYPvWLt
        q6O+ArBvIivON03jD81i03jYsf8A0oLdIXTr+h2T/wCja/JK5Xpsb5n8+zrOpyni/wA+7146bQaXBct/
        +bZdR65fzo1rpTDv8l1T+G4B7E15K10/il+WyV7kLL7KRRH+I8Qwg4aeZYM8/wAU1zvSfSz7/s6Tq/rL
        9v3e1tNOzH0X6jemLVxxs49D+civnq9NsDJwaeVlQfUCmU+KXG2HceGcfSsXo8vrG51eP0r3nWNyWecg
        n8qik7hDPOT7amvFW/i9hvh28+sPsWNHX4xXjZceAP8AKsXo9Txt92p1en53+z15uNxDHujh6AVwuPtQ
        fHs+wNeXT4vs8bdwfxn8hR1+MrHJx6n61n5XVnj3n5X5nSvn2v4ejvBbixAB4GAPI8SKyLq5TDCDQU+L
        cMeJ8wonwFF/tvCXSA7rl5hlzjwBEQe8130cdXDtZ2ctTPSy7y91M1czUo+Nsm4ES5I4sVn/AKCY9asL
        k17NtnmllN5qlLC5UoELeK8KJbYTsKEid1GVO6iuPZB4ChthxTItDlXSlYuLcpT9GFXGEHKmVtURLVY4
        t7lBgh/UVdej52H0pzqu6p1fdWbjWpsUGDI4Dzqf2cToAPKKb6scj61Cg51natdgR0S/Kur0Y5kAD2os
        ePqam21YsrW0KP0aV+yvufrvQ72C/ZXyBH0p/M3OrLm5A+lO5tGYvRxb/DH4p/lVbmCdDvaPhlP1FarJ
        4egrhtju9qvdOMZS4NmkygJ8B9Kat9FlQPkPgBTlu13mnEtjQGl3JjGNcwz7Aew8tZq6YK990c9gf/lW
        w2GQ8aobFtTTvscYQS0w0IHhA/nVMRbHEDxArThOFDe2p4msd92uLCaz3H0O3rXDheIB8BW8AnHXxNQ2
        7XKtcqnBhW8L3euWZ8TXDgo4DyYfka2ertzt7Vw2kpvTiyThxp2Pc/zqqYePsg939GtpUTvrnVpwFN6n
        FjfowP2R/Xia6mD45fWa1DbWuZBzq9zaM79FXgoHhXTho3U+p96d6vvoTKe6ndNoWFoD7P1qwyj7HvV2
        mhOeZmrtU7LEA7J+dUW2OXtVZqFvCumMYyWVNQYowb9k+tJlhzrhfvrps5n1BOytUpDrDUq7AggVdcSB
        xpK/hGUBgZmlWzcVrl8St8Y3ExIO1WF0b1j2Q2x7NHt4nSOFS6lXjGqLyfeq64hOdZFzWCNTXXSBMGfC
        s/ErXGN0YhdgaKAsSSK87BO2lXOaNqz8StcY3hct8xVhetc68+lt/GuXHccKlzyakj0Ru2+dQvb5+1Zu
        DwtxhmBHhQ2tXSflJNY51raNi29o8RRXsqBMxWAEcEBv/wApxlgCWms3UsamMPAIeNdy29iwrPV1HhVr
        yKRKEeutPiU2jSK21+Y+ldGJsjjWXYuxoduNHvLZKkoY7jvTnTZqfpNmRqNaJibdsCWgA7V5iAeOtH68
        EQ0mBpU+JWuDWY2vvD1qv6oHVh61iPcA2FCa4CasyyptG69yydiB51y2bfMVhzptVwSeFa/yzs1BeszA
        YHzppbS9x868/btHgKuquTvFS5HFvXRaA296ASvCKEikWirCZ2M0iei3ImTFWakZuNaTZInSOdCFy2dJ
        FJGy4WOFJG2ORq/ETg2Lt60vzUu2KtEwtZrEEE7xQVfWBFb5s8f/AFt3Db5GglU4z6isrO5MTUa0w3mt
        y9mL6nn6qYDetDZEmJpFLROwo1rBk6k6eOtXlYlxgrWV76qthTsTXb9jIYzTyNKARsYq86nA3+jjvqUr
        nPA1KvOnCDI52mug1KlLIxuMlXucP5VKlSSKtEHSjsxipUrEkbBY7Vd2qVKm0XczZcx/oK5e286lSrZO
        xKltiLgjlT1m8wmD9KlSuWcnZ0wpa7qSTQ54VKlctpu6b05hkBAkD0qWkA2A35VKldsJNnO1W8ozbCu2
        kHIelSpXOyNSjG2vIegodpROw9KlSmWM2WWjGwmvZHpWXibKg6AVKlakjOVolq2uU6Cs9RDQKlSumMm1
        Ztu49s602VE1KlY4zedl3vda5qtAS60RNSpVxkS2r2hrXbiDlXKlLISkVsrJ0pa9hk10+tSpXSMu27Yg
        aU1b+UipUrUkYtcu2xoYoyoJGlSpVkShYi2Dw41cYdPujapUpsFTYXkKlSpUqx//2Q==
</value>
  </data>
</root>